{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Waseer\\\\OneDrive\\\\Desktop\\\\DNT\\\\src\\\\NoteForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NoteForm({\n  addNote,\n  selectedNote\n}) {\n  _s();\n  const [title, setTitle] = useState(selectedNote ? selectedNote.title : \"\");\n  const [content, setContent] = useState(selectedNote ? selectedNote.content : \"\");\n  const [tags, setTags] = useState(selectedNote ? selectedNote.tags.join(\", \") : \"\");\n  const [loading, setLoading] = useState(false); // Loading state\n  const [success, setSuccess] = useState(\"\"); // Success message state\n  const [error, setError] = useState(\"\"); // Error message state\n\n  // Populate form when `selectedNote` changes\n  useEffect(() => {\n    if (selectedNote) {\n      setTitle(selectedNote.title);\n      setContent(selectedNote.content);\n      setTags(selectedNote.tags.join(\", \"));\n    } else {\n      resetForm();\n    }\n  }, [selectedNote]);\n\n  // Reset the form\n  const resetForm = () => {\n    setTitle(\"\");\n    setContent(\"\");\n    setTags(\"\");\n  };\n\n  // Handle form submission\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Validation: Check if title is empty\n    if (!title.trim()) {\n      setError(\"Title cannot be empty!\");\n      return;\n    }\n\n    // Validation: Check if tags contain only letters and numbers\n    const tagsArray = tags.split(\",\").map(tag => tag.trim());\n    if (tagsArray.some(tag => !/^[a-zA-Z0-9]+$/.test(tag))) {\n      setError(\"Tags must contain only letters and numbers.\");\n      return;\n    }\n    setError(\"\"); // Clear previous errors\n    setLoading(true); // Start loading state\n\n    // Create or update note object\n    const noteData = {\n      id: selectedNote ? selectedNote.id : Date.now(),\n      // Use existing id or generate new one\n      title,\n      content,\n      tags: tagsArray\n    };\n\n    // Call `addNote` to handle both adding and updating notes\n    try {\n      addNote(noteData);\n      setSuccess(selectedNote ? \"Note updated successfully!\" : \"Note added successfully!\");\n      resetForm();\n    } catch (err) {\n      setError(\"Failed to save the note. Please try again.\");\n    } finally {\n      setLoading(false); // Stop loading state\n      setTimeout(() => setSuccess(\"\"), 3000); // Clear success message after 3 seconds\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"note-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"form-title\",\n      children: selectedNote ? \"Edit Note\" : \"Add Note\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"success-message\",\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"title\",\n        className: \"input-label\",\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"title\",\n        type: \"text\",\n        placeholder: \"Title\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        maxLength: 50,\n        className: \"input-field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        className: \"char-counter\",\n        children: [title.length, \"/50\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"content\",\n        className: \"input-label\",\n        children: \"Content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"content\",\n        placeholder: \"Content\",\n        value: content,\n        onChange: e => setContent(e.target.value),\n        maxLength: 2000,\n        className: \"textarea-field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        className: \"char-counter\",\n        children: [content.length, \"/2000\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"tags\",\n        className: \"input-label\",\n        children: \"Tags (comma-separated)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"tags\",\n        type: \"text\",\n        placeholder: \"Tags (comma-separated)\",\n        value: tags,\n        onChange: e => setTags(e.target.value),\n        className: \"input-field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: loading,\n      className: \"submit-button\",\n      children: loading ? \"Processing...\" : selectedNote ? \"Update Note\" : \"Add Note\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(NoteForm, \"zGI8phh/Kwzd8HmDNcDuzTXiVwE=\");\n_c = NoteForm;\nexport default NoteForm;\nvar _c;\n$RefreshReg$(_c, \"NoteForm\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","NoteForm","addNote","selectedNote","_s","title","setTitle","content","setContent","tags","setTags","join","loading","setLoading","success","setSuccess","error","setError","resetForm","handleSubmit","e","preventDefault","trim","tagsArray","split","map","tag","some","test","noteData","id","Date","now","err","setTimeout","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","placeholder","value","onChange","target","maxLength","length","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Waseer/OneDrive/Desktop/DNT/src/NoteForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nfunction NoteForm({ addNote, selectedNote }) {\r\n  const [title, setTitle] = useState(selectedNote ? selectedNote.title : \"\");\r\n  const [content, setContent] = useState(\r\n    selectedNote ? selectedNote.content : \"\"\r\n  );\r\n  const [tags, setTags] = useState(\r\n    selectedNote ? selectedNote.tags.join(\", \") : \"\"\r\n  );\r\n  const [loading, setLoading] = useState(false); // Loading state\r\n  const [success, setSuccess] = useState(\"\"); // Success message state\r\n  const [error, setError] = useState(\"\"); // Error message state\r\n\r\n  // Populate form when `selectedNote` changes\r\n  useEffect(() => {\r\n    if (selectedNote) {\r\n      setTitle(selectedNote.title);\r\n      setContent(selectedNote.content);\r\n      setTags(selectedNote.tags.join(\", \"));\r\n    } else {\r\n      resetForm();\r\n    }\r\n  }, [selectedNote]);\r\n\r\n  // Reset the form\r\n  const resetForm = () => {\r\n    setTitle(\"\");\r\n    setContent(\"\");\r\n    setTags(\"\");\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Validation: Check if title is empty\r\n    if (!title.trim()) {\r\n      setError(\"Title cannot be empty!\");\r\n      return;\r\n    }\r\n\r\n    // Validation: Check if tags contain only letters and numbers\r\n    const tagsArray = tags.split(\",\").map((tag) => tag.trim());\r\n    if (tagsArray.some((tag) => !/^[a-zA-Z0-9]+$/.test(tag))) {\r\n      setError(\"Tags must contain only letters and numbers.\");\r\n      return;\r\n    }\r\n\r\n    setError(\"\"); // Clear previous errors\r\n    setLoading(true); // Start loading state\r\n\r\n    // Create or update note object\r\n    const noteData = {\r\n      id: selectedNote ? selectedNote.id : Date.now(), // Use existing id or generate new one\r\n      title,\r\n      content,\r\n      tags: tagsArray,\r\n    };\r\n\r\n    // Call `addNote` to handle both adding and updating notes\r\n    try {\r\n      addNote(noteData);\r\n      setSuccess(\r\n        selectedNote ? \"Note updated successfully!\" : \"Note added successfully!\"\r\n      );\r\n      resetForm();\r\n    } catch (err) {\r\n      setError(\"Failed to save the note. Please try again.\");\r\n    } finally {\r\n      setLoading(false); // Stop loading state\r\n      setTimeout(() => setSuccess(\"\"), 3000); // Clear success message after 3 seconds\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"note-form\">\r\n      <h2 className=\"form-title\">{selectedNote ? \"Edit Note\" : \"Add Note\"}</h2>\r\n\r\n      {success && <p className=\"success-message\">{success}</p>}\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n\r\n      <div className=\"input-group\">\r\n        <label htmlFor=\"title\" className=\"input-label\">\r\n          Title\r\n        </label>\r\n        <input\r\n          id=\"title\"\r\n          type=\"text\"\r\n          placeholder=\"Title\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          maxLength={50}\r\n          className=\"input-field\"\r\n        />\r\n        <small className=\"char-counter\">{title.length}/50</small>\r\n      </div>\r\n\r\n      <div className=\"input-group\">\r\n        <label htmlFor=\"content\" className=\"input-label\">\r\n          Content\r\n        </label>\r\n        <textarea\r\n          id=\"content\"\r\n          placeholder=\"Content\"\r\n          value={content}\r\n          onChange={(e) => setContent(e.target.value)}\r\n          maxLength={2000}\r\n          className=\"textarea-field\"\r\n        ></textarea>\r\n        <small className=\"char-counter\">{content.length}/2000</small>\r\n      </div>\r\n\r\n      <div className=\"input-group\">\r\n        <label htmlFor=\"tags\" className=\"input-label\">\r\n          Tags (comma-separated)\r\n        </label>\r\n        <input\r\n          id=\"tags\"\r\n          type=\"text\"\r\n          placeholder=\"Tags (comma-separated)\"\r\n          value={tags}\r\n          onChange={(e) => setTags(e.target.value)}\r\n          className=\"input-field\"\r\n        />\r\n      </div>\r\n\r\n      <button type=\"submit\" disabled={loading} className=\"submit-button\">\r\n        {loading ? \"Processing...\" : selectedNote ? \"Update Note\" : \"Add Note\"}\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default NoteForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}