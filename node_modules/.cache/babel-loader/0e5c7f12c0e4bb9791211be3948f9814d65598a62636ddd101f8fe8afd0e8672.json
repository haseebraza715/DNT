{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import NoteForm from\"./NoteForm\";import NoteList from\"./NoteList\";import\"./App.css\";import{FaUser}from\"react-icons/fa\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[notes,setNotes]=useState([]);const[selectedNote,setSelectedNote]=useState(null);const[isDarkTheme,setIsDarkTheme]=useState(true);// Apply theme based on the user's choice\nuseEffect(()=>{document.body.classList.add(isDarkTheme?\"dark-theme\":\"light-theme\");document.body.classList.remove(isDarkTheme?\"light-theme\":\"dark-theme\");},[isDarkTheme]);// Load notes from local storage when the app loads\nuseEffect(()=>{loadNotesFromLocalStorage();},[]);// Function to load notes from local storage\nconst loadNotesFromLocalStorage=()=>{const storedNotes=JSON.parse(localStorage.getItem(\"notes\"))||[];setNotes(storedNotes);};// Function to save notes to local storage\nconst saveNotesToLocalStorage=newNotes=>{localStorage.setItem(\"notes\",JSON.stringify(newNotes));};// Function to add a new note\nconst addNote=note=>{if(notes.some(n=>n.title===note.title&&!selectedNote)){alert(\"A note with this title already exists!\");return;}if(selectedNote){// Update an existing note\nconst updatedNotes=notes.map(n=>n.id===selectedNote.id?{...n,...note}:n);setNotes(updatedNotes);saveNotesToLocalStorage(updatedNotes);setSelectedNote(null);// Clear selected note after updating\n}else{// Add a new note\nconst newNote={...note,id:Date.now()};// Add a unique ID\nconst updatedNotes=[...notes,newNote];setNotes(updatedNotes);saveNotesToLocalStorage(updatedNotes);}};// Function to delete a note by its unique ID\nconst deleteNote=id=>{const updatedNotes=notes.filter(note=>note.id!==id);setNotes(updatedNotes);saveNotesToLocalStorage(updatedNotes);if(selectedNote&&selectedNote.id===id){setSelectedNote(null);// Clear selected note if it's deleted\n}};// Function to select a note for editing\nconst selectNote=note=>{setSelectedNote(note);};// Toggle between dark and light themes\nconst toggleTheme=()=>{setIsDarkTheme(prevTheme=>!prevTheme);};return/*#__PURE__*/_jsxs(\"div\",{className:`app-container ${isDarkTheme?\"dark-theme\":\"light-theme\"}`,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"header\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"title-container\",children:/*#__PURE__*/_jsx(\"h1\",{children:\"Digital Note-Taker\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"header-actions\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:toggleTheme,className:\"theme-toggle\",children:isDarkTheme?\"Switch to Light Theme\":\"Switch to Dark Theme\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"author-info\",children:[/*#__PURE__*/_jsx(FaUser,{className:\"header-icon\"}),/*#__PURE__*/_jsxs(\"span\",{children:[\"Created by\",\" \",/*#__PURE__*/_jsx(\"a\",{href:\"https://www.linkedin.com/in/haseeb-raza-00a845231/\",target:\"_blank\",rel:\"noopener noreferrer\",children:\"Haseeb Raza\"})]})]})]})]}),/*#__PURE__*/_jsxs(\"main\",{className:\"main-content\",children:[/*#__PURE__*/_jsx(NoteForm,{addNote:addNote,updateNote:addNote// Pass the same function for adding/updating\n,selectedNote:selectedNote}),/*#__PURE__*/_jsx(NoteList,{notes:notes,deleteNote:deleteNote,selectNote:selectNote})]})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","NoteForm","NoteList","FaUser","jsx","_jsx","jsxs","_jsxs","App","notes","setNotes","selectedNote","setSelectedNote","isDarkTheme","setIsDarkTheme","document","body","classList","add","remove","loadNotesFromLocalStorage","storedNotes","JSON","parse","localStorage","getItem","saveNotesToLocalStorage","newNotes","setItem","stringify","addNote","note","some","n","title","alert","updatedNotes","map","id","newNote","Date","now","deleteNote","filter","selectNote","toggleTheme","prevTheme","className","children","onClick","href","target","rel","updateNote"],"sources":["C:/Users/Waseer/OneDrive/Desktop/DNT/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport NoteForm from \"./NoteForm\";\r\nimport NoteList from \"./NoteList\";\r\nimport \"./App.css\";\r\nimport { FaUser } from \"react-icons/fa\";\r\n\r\nfunction App() {\r\n  const [notes, setNotes] = useState([]);\r\n  const [selectedNote, setSelectedNote] = useState(null);\r\n  const [isDarkTheme, setIsDarkTheme] = useState(true);\r\n\r\n  // Apply theme based on the user's choice\r\n  useEffect(() => {\r\n    document.body.classList.add(isDarkTheme ? \"dark-theme\" : \"light-theme\");\r\n    document.body.classList.remove(isDarkTheme ? \"light-theme\" : \"dark-theme\");\r\n  }, [isDarkTheme]);\r\n\r\n  // Load notes from local storage when the app loads\r\n  useEffect(() => {\r\n    loadNotesFromLocalStorage();\r\n  }, []);\r\n\r\n  // Function to load notes from local storage\r\n  const loadNotesFromLocalStorage = () => {\r\n    const storedNotes = JSON.parse(localStorage.getItem(\"notes\")) || [];\r\n    setNotes(storedNotes);\r\n  };\r\n\r\n  // Function to save notes to local storage\r\n  const saveNotesToLocalStorage = (newNotes) => {\r\n    localStorage.setItem(\"notes\", JSON.stringify(newNotes));\r\n  };\r\n\r\n  // Function to add a new note\r\n  const addNote = (note) => {\r\n    if (notes.some((n) => n.title === note.title && !selectedNote)) {\r\n      alert(\"A note with this title already exists!\");\r\n      return;\r\n    }\r\n\r\n    if (selectedNote) {\r\n      // Update an existing note\r\n      const updatedNotes = notes.map((n) =>\r\n        n.id === selectedNote.id ? { ...n, ...note } : n\r\n      );\r\n      setNotes(updatedNotes);\r\n      saveNotesToLocalStorage(updatedNotes);\r\n      setSelectedNote(null); // Clear selected note after updating\r\n    } else {\r\n      // Add a new note\r\n      const newNote = { ...note, id: Date.now() }; // Add a unique ID\r\n      const updatedNotes = [...notes, newNote];\r\n      setNotes(updatedNotes);\r\n      saveNotesToLocalStorage(updatedNotes);\r\n    }\r\n  };\r\n\r\n  // Function to delete a note by its unique ID\r\n  const deleteNote = (id) => {\r\n    const updatedNotes = notes.filter((note) => note.id !== id);\r\n    setNotes(updatedNotes);\r\n    saveNotesToLocalStorage(updatedNotes);\r\n    if (selectedNote && selectedNote.id === id) {\r\n      setSelectedNote(null); // Clear selected note if it's deleted\r\n    }\r\n  };\r\n\r\n  // Function to select a note for editing\r\n  const selectNote = (note) => {\r\n    setSelectedNote(note);\r\n  };\r\n\r\n  // Toggle between dark and light themes\r\n  const toggleTheme = () => {\r\n    setIsDarkTheme((prevTheme) => !prevTheme);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`app-container ${isDarkTheme ? \"dark-theme\" : \"light-theme\"}`}\r\n    >\r\n      <div className=\"header\">\r\n        <div className=\"title-container\">\r\n          <h1>Digital Note-Taker</h1>\r\n        </div>\r\n        <div className=\"header-actions\">\r\n          <button onClick={toggleTheme} className=\"theme-toggle\">\r\n            {isDarkTheme ? \"Switch to Light Theme\" : \"Switch to Dark Theme\"}\r\n          </button>\r\n          <div className=\"author-info\">\r\n            <FaUser className=\"header-icon\" />\r\n            <span>\r\n              Created by{\" \"}\r\n              <a\r\n                href=\"https://www.linkedin.com/in/haseeb-raza-00a845231/\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                Haseeb Raza\r\n              </a>\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <main className=\"main-content\">\r\n        <NoteForm\r\n          addNote={addNote}\r\n          updateNote={addNote} // Pass the same function for adding/updating\r\n          selectedNote={selectedNote}\r\n        />\r\n        <NoteList\r\n          notes={notes}\r\n          deleteNote={deleteNote}\r\n          selectNote={selectNote}\r\n        />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}